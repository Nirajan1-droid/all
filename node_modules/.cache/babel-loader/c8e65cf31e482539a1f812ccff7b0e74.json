{"ast":null,"code":"import _slicedToArray from \"/home/nirajan/withcart/Unicorn-Classic/Unicorn-Classic/site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/nirajan/withcart/Unicorn-Classic/Unicorn-Classic/site/src/components/context/Context.js\";\nimport { createContext, useReducer } from \"react\";\nimport Reducer from \"./Reducer\";\nimport { useEffect } from \"react\";\nimport React from 'react';\nvar INITIAL_STATE = {\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  //if user is avaiable then set the value to the user section defined by the useEffect\n  isFetching: false,\n  error: false\n};\nexport var Context = createContext(INITIAL_STATE);\nexport var ContextProvider = function ContextProvider(_ref) {\n  var children = _ref.children;\n  //the childern from this function is to be passed to the other components\n  var _useReducer = useReducer(Reducer, INITIAL_STATE),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    state = _useReducer2[0],\n    dispatch = _useReducer2[1]; //the first parameter of the function is the module that is imported from the component Reducer\n  //the initial state is defined above and used for the initial conditon before everything fires from the Reducer component cases\n  useEffect(function () {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n    //set user property in the localStorage object and store it in localStorage object returned from this function \n    //for information you can create multiple objects in the localstorage\n  }, [state.user]);\n  return (\n    /*#__PURE__*/\n    //**\n    //  * this functionnamewherethisistobecreated.Provider is the thing which will be passed from this component first to the main app of the components which is App.js and there after to the child component \n    //  */\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Context.Provider, {\n      value: {\n        user: state.user,\n        /**NULL, ACTION.PAYLOAD, NULL */\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch: dispatch\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, children))\n  );\n};","map":{"version":3,"names":["createContext","useReducer","Reducer","useEffect","React","INITIAL_STATE","user","JSON","parse","localStorage","getItem","isFetching","error","Context","ContextProvider","children","state","dispatch","setItem","stringify"],"sources":["/home/nirajan/withcart/Unicorn-Classic/Unicorn-Classic/site/src/components/context/Context.js"],"sourcesContent":["import { createContext , useReducer } from \"react\";\nimport Reducer from \"./Reducer\"; \nimport { useEffect } from \"react\";  \nimport React from 'react';\n\nconst INITIAL_STATE = {\n    user: JSON.parse(localStorage.getItem(\"user\")) || null,//if user is avaiable then set the value to the user section defined by the useEffect\n    isFetching : false,\n    error :false,\n};\n\nexport const Context = createContext(INITIAL_STATE);\n\n \nexport  const ContextProvider = ({children}) =>{//the childern from this function is to be passed to the other components\n    const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);//the first parameter of the function is the module that is imported from the component Reducer\n    //the initial state is defined above and used for the initial conditon before everything fires from the Reducer component cases\n    useEffect(()=>{\n        localStorage.setItem(\"user\",JSON.stringify(state.user));\n        //set user property in the localStorage object and store it in localStorage object returned from this function \n        //for information you can create multiple objects in the localstorage\n        \n\n    },[state.user]);\n      \n\n    return (\n        //**\n        //  * this functionnamewherethisistobecreated.Provider is the thing which will be passed from this component first to the main app of the components which is App.js and there after to the child component \n        //  */\n        <>\n    <Context.Provider\n    value = {{\n      user:state.user,/**NULL, ACTION.PAYLOAD, NULL */\n      isFetching:state.isFetching,\n      error:state.error,\n        dispatch,\n      }}>\n        {children}\n    </Context.Provider>\n      </>\n\n    );\n    \n}"],"mappings":";;;AAAA,SAASA,aAAa,EAAGC,UAAU,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,IAAMC,aAAa,GAAG;EAClBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EAAC;EACvDC,UAAU,EAAG,KAAK;EAClBC,KAAK,EAAE;AACX,CAAC;AAED,OAAO,IAAMC,OAAO,GAAGb,aAAa,CAACK,aAAa,CAAC;AAGnD,OAAQ,IAAMS,eAAe,GAAG,SAAlBA,eAAe,OAAkB;EAAA,IAAbC,QAAQ,QAARA,QAAQ;EAAM;EAAA,kBAClBd,UAAU,CAACC,OAAO,EAAEG,aAAa,CAAC;IAAA;IAArDW,KAAK;IAAEC,QAAQ,oBAAuC;EAC7D;EACAd,SAAS,CAAC,YAAI;IACVM,YAAY,CAACS,OAAO,CAAC,MAAM,EAACX,IAAI,CAACY,SAAS,CAACH,KAAK,CAACV,IAAI,CAAC,CAAC;IACvD;IACA;EAGJ,CAAC,EAAC,CAACU,KAAK,CAACV,IAAI,CAAC,CAAC;EAGf;IAAA;IACI;IACA;IACA;IACA,uDACJ,oBAAC,OAAO,CAAC,QAAQ;MACjB,KAAK,EAAI;QACPA,IAAI,EAACU,KAAK,CAACV,IAAI;QAAC;QAChBK,UAAU,EAACK,KAAK,CAACL,UAAU;QAC3BC,KAAK,EAACI,KAAK,CAACJ,KAAK;QACfK,QAAQ,EAARA;MACF,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACCF,QAAQ,CACM;EACd;AAIT,CAAC"},"metadata":{},"sourceType":"module"}